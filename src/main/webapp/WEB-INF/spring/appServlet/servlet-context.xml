<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:aop="http://www.springframework.org/schema/aop"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/categoryimg/**" location="/resources/categoryimg/" />
	<resources mapping="/profileimg/**" location="file:///D:/data/data2/" />
	<resources mapping="/blockimg/**" location="file:///D:/data/data2/" />
	<resources mapping="/bookmark/**" location="file:///D:/data/data2/" />

	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>



	<!-- Tiles 뷰 리졸버 -->
	<!-- Tiles 뷰 리졸버가 view로 리턴하는 요청을 기본으로 설정된 InternalViewResolver보다 먼저 catch 하여 처리한다.-->
	<beans:bean id="tielsViewResolver"
				class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
						value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>


	<!-- Tiles 설정 파일 -->
	<beans:bean id="tilesConfigurer"
				class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색 (auto scan) -->
	<!-- 스프링에서 관리하는 bean의 기본 디렉토리 -->
	<context:annotation-config/>
	<context:component-scan base-package="hi.im.jenga" />
	<annotation-driven />
	<!-- aop의 설정으로 Proxy 객체를 자동으로 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- MultipartResolver -->
	<!-- CommonsMultipartResolver : 스프링 프레임워크에 내장되어 있는 MultipartResolver 이다. -->
	<!-- Multipart 객체를 전달하는 역할 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize : 한 번에 최대 올릴 수 있는 파일 사이즈 -->
		<beans:property name="maxUploadSize" value="100000000"/>
		<!-- maxInMemorySize : 해당 경로에 최대로 저장할 수 있는 파일 사이즈-->
		<beans:property name="maxInMemorySize" value="100000000"/>
	</beans:bean>

	 <!--Interceptor 설정 추가-->
	<beans:bean id="loginInterceptor" class="hi.im.jenga.interceptor.LoginInterceptor"></beans:bean>
	<beans:bean id="authInterceptor" class="hi.im.jenga.interceptor.AuthInterceptor"></beans:bean>

	<interceptors>

		<interceptor>
			<!-- 원하는 URI 지정, web.xml의 필터나 Servlet의 설정과 동일하므로, 필요한 경로를 직접 지정하거나 **, *와 같은 패턴을 적용해 줄 수 있다. -->
			<!-- => /logincheck 경로를 호출하면 LoginInterceptor가 동작한다. -->
			<mapping path="/logincheck"/>

			<beans:ref bean="loginInterceptor"/>
		</interceptor>

		<interceptor>
			<mapping path="/board/stackBlock"/>
			<mapping path="/board/modView"/>
			<mapping path="/board/delBlock"/>

			<mapping path="/modMemInfo"/>
			<mapping path="/logout"/>

			<beans:ref bean="authInterceptor"/>
		</interceptor>
	</interceptors>

	
	
	<!--&lt;!&ndash; 파일업로드를 위한 디렉토리 설정 &ndash;&gt;
    &lt;!&ndash; String uploadPath = new String("업로드 경로") &ndash;&gt;
    <beans:bean id="uploadPath" class="java.lang.String">
       &lt;!&ndash; 파일업로드 디렉토리&ndash;&gt;
       <beans:constructor-arg value="해당디렉토리"/>
    </beans:bean>-->

</beans:beans>