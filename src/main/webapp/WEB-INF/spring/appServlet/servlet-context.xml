<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    <!-- Enables the Spring MVC @Controller programming model -->
    <default-servlet-handler/>
    <context:component-scan base-package="hi.im.jenga"/>
    <context:annotation-config/>



    <annotation-driven>
        <argument-resolvers>
            <beans:bean class="hi.im.jenga.util.AuthUserHandlerMethodArgumentResolver"></beans:bean>
        </argument-resolvers>
    </annotation-driven>


    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/"/>
    <resources mapping="/categoryimg/**" location="/resources/categoryimg/"/>
    <resources mapping="/profile/**" location="file:///D:/jengaResource/upload/img/profile/"/>
    <resources mapping="/img/block/**" location="file:///D:/jengaResource/upload/img/block/"/>
    <resources mapping="/bookmark/**" location="file:///D:/jengaResource/upload/bookmarks/path/"/>

    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>


    <!-- Tiles 뷰 리졸버 -->
    <!-- Tiles 뷰 리졸버가 view로 리턴하는 요청을 기본으로 설정된 InternalViewResolver보다 먼저 catch 하여 처리한다.-->
    <beans:bean id="tilesViewResolver"
                class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass"
                        value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <beans:property name="order" value="1"/>
    </beans:bean>


    <!-- Tiles 설정 파일 -->
    <beans:bean id="tilesConfigurer"
                class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- aop의 설정으로 Proxy 객체를 자동으로 생성 -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- maxUploadSize : 한 번에 최대 올릴 수 있는 파일 사이즈 -->
        <beans:property name="maxUploadSize" value="100000000"/>
        <!-- maxInMemorySize : 해당 경로에 최대로 저장할 수 있는 파일 사이즈-->
        <beans:property name="maxInMemorySize" value="100000000"/>
    </beans:bean>

    <!--Interceptor 설정 추가-->
    <beans:bean id="loginInterceptor" class="hi.im.jenga.interceptor.LoginInterceptor"></beans:bean>

    <interceptors>

        <interceptor>
            <mapping path="/board/stackBlock"/>
            <mapping path="/board/modView"/>
            <mapping path="/board/delBlock"/>
            <mapping path="/modMemInfo"/>
            <mapping path="/logout"/>

            <beans:ref bean="loginInterceptor"/>

        </interceptor>

    </interceptors>


</beans:beans>

