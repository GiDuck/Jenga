<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
	  http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">



	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색 (auto scan) -->
	<!-- 스프링에서 관리하는 bean의 기본 디렉토리 -->

	<util:properties id="props" location="classpath:/properties/emailform.properties" />
	<util:properties id="data" location="classpath:/properties/auth.properties" />
	<util:properties id="email" location="classpath:/properties/email.properties" />


	<!-- DataSource는 JDBC의 커넥션을 처리하는 기능을 가지고 있기 때문에 데이터베이스와 연동 작업에 반드시 필요하다. -->
	<!-- oracle -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- 드라이버 클래스 이름이 변경됨 -->
		<!-- <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property> -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>

		<!-- 연결문자열에 log4jdbc가 추가됨 -->
		 	<property name="url" value="jdbc:oracle:thin:@#{data['oracle.url']}:#{data['oracle.port']}:#{data['oracle.id']}"></property>
			<property name="username" value="#{data['oracle.username']}" />
			<property name="password" value="#{data['oracle.password']}" />
		</bean>

	<!-- 메일 보내기 (SEND) -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="#{email['gm.mailid']}" />
		<property name="password" value="#{email['gm.mailpass']}" />

		<!-- email 요청시는 SMTP -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>


	<!-- SqlSessionFactory 객체 주입 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
	</bean>
	<!-- SqlSession 객체 주입 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
	</bean>

	<!-- 트랜젝션 매니저 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- @Transactional 애노테이션을 sacn하기 위한 설정 -->
	<tx:annotation-driven/>


</beans>
