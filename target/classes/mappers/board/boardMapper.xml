<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">		<!-- MyBatis의 경우 작성된 XML Mapper는 상단의 파일에서 사용하는 태그들에 대한 정보가 기록된 DTD를 추가 -->

<mapper namespace="board">

	<update id="addReadCount">
		UPDATE
			tbl_blockReadCount
		SET
			blrc_count = blrc_count + 1
		WHERE
			blrc_ref = #{bl_uid}
	</update>

	<select id="getBoardDetailBlock" resultType="Map">
		SELECT
			B.bl_writer AS "bl_writer", B.bl_title AS "bl_title", B.bl_description AS "bl_description", B.bl_introduce AS "bl_introduce", B.bl_mainCtg AS "bl_mainCtg", B.bl_smCtg AS "bl_smCtg", B.bl_date AS "bl_date", B.bl_objId AS "bl_objId",
			I.bti_url AS "bti_url", R.blrc_count AS "blrc_count"
		FROM
			tbl_block B
			INNER JOIN
				tbl_thumbImg I
			ON
				I.bti_ref = B.bl_uid
			INNER JOIN
				tbl_blockReadCount R
			ON
				R.blrc_ref = B.bl_uid
		WHERE
			B.bl_uid = #{bl_uid} AND R.blrc_ref = #{bl_uid}
	</select>

	<select id="getBoardDetailTags" resultType="String">
		SELECT
			bt_name
		FROM
			tbl_blockTags
		WHERE
			bt_ref = #{bl_uid}
	</select>

	<insert id="writeViewBlock">
		INSERT INTO
    		tbl_block
				(bl_uid, bl_writer, bl_title, bl_introduce, bl_description, bl_mainCtg, bl_smCtg, bl_date, bl_objId)
		VALUES
				(#{bl_uid}, #{bl_writer}, #{bl_title}, #{bl_introduce}, #{bl_description}, #{bl_mainCtg}, #{bl_smCtg}, #{bl_date}, #{bl_objId})
	</insert>

	<insert id="writeViewThumbImg">
		INSERT INTO
			tbl_thumbImg
				(bti_ref, bti_url)
		VALUES
				(#{bl_uid}, #{uploadName})
	</insert>

	<insert id="writeViewTag">
		INSERT INTO
			tbl_blockTags
				(bt_ref, bt_name)
		VALUES
				(#{bl_uid}, #{tag})
	</insert>
    <!-- 조회수 테이블 초기화 -->
	<insert id="writeViewReadCount">
		INSERT INTO
			tbl_blockReadCount
				(blrc_ref)
		VALUES
				(#{bl_uid})
	</insert>

	<!-- 좋아요 체크 -->
	<select id="likeCheck" resultType="String">
		SELECT
			blk_writer
		from
			tbl_blocklikes
		where
			blk_ref = #{bl_iuid} and blk_writer = #{session_mem_iuid}

	</select>

    <!-- 좋아요 증가 -->
	<insert id="addLike">
		INSERT INTO
			tbl_blockLikes
				(blk_ref)
        VALUES
				(#{bl_uid})
	</insert>

    <!-- 좋아요 취소 -->
	<delete id="cancelLike">
        DELETE FROM
            tbl_blockLikes
        WHERE
            blrc_ref = #{bl_uid}
    </delete>

	<!-- 좋아요 카운트-->

	<select id="modifyViewGET" resultType="Map">
		SELECT
			B.bl_writer, B.bl_title, B.bl_description, B.bl_mainCtg, B.bl_smCtg, B.bl_date, B.bl_objId,
			I.bti_url
		FROM
			tbl_block B
			INNER JOIN
				tbl_thumbImg I
			ON
				B.bl_uid = I.bti_ref
		WHERE
			B.bl_uid = #{bl_uid}
	</select>

	<select id="modifyViewGET2" resultType="String">
		SELECT
			bt_name
		FROM
			tbl_blockTags
		WHERE
			bt_ref = #{bl_uid}
	</select>
	
	<select id="getUploadName" resultType="String">
		SELECT
			bti_url
		FROM
			tbl_thumbImg
		WHERE
			bti_ref = #{bl_uid}
	</select>

	<update id="modifyViewBoard">
		UPDATE
			tbl_block
		SET
			(bl_writer = #{bl_writer}, bl_title = #{bl_title}, bl_description = #{bl_description}, bl_mainCtg = #{bl_mainCtg}, bl_smCtg = #{bl_smCtg}, bl_date = #{bl_date}, bl_objId = #{bl_objId})
		WHERE
			bl_uid = #{bl_uid}
	</update>

	<update id="modifyViewThumbImg">
		UPDATE
			tbl_thumbImg
		SET
			bti_url = #{uploadName}
		WHERE
			bti_ref = #{bl_uid}
	</update>

	<update id="modifyViewTag">
		UPDATE
			tbl_blockTags
		SET
			bt_name = #{tag}
		WHERE
			bt_ref = #{bl_uid}
	</update>

	<select id="checkBmksPath" resultType="String">
		SELECT
			bp_path
		FROM
			tbl_blpath
		WHERE
			bp_iuid = #{session_iuid}
	</select>

	<insert id="insertBmksPath">
		INSERT INTO
			tbl_blpath
			(bp_iuid, bp_path, bp_date, bp_browstype, bp_booktype)
		VALUES
			(#{session_iuid}, #{blockPathDTO.bp_path}, sysdate, #{blockPathDTO.bp_browstype}, #{blockPathDTO.bp_booktype})
	</insert>

	<update id="updateBmksPath">
		UPDATE
			tbl_blpath
		SET
			bp_path = #{blockPathDTO.bp_path}, bp_date = sysdate, bp_browstype = #{blockPathDTO.bp_browstype}, bp_booktype = #{blockPathDTO.bp_booktype}
		WHERE
			bp_iuid = #{session_iuid}
	</update>

	<select id="getBookMarkFromHTML" resultType="String">
		SELECT
			bp_path
		FROM
			tbl_blpath
		WHERE
			bp_iuid = #{session_iuid}
	</select>

	<delete id="deleteBlock">
		DELETE FROM
			tbl_block
		WHERE
			bl_uid = #{bl_uid}
	</delete>

	<select id="mCtgAllUids" resultType="String">
		SELECT
			mctg_uid
		FROM
			tbl_mCategory
	</select>

	<select id="mCtgAllNames" resultType="String">
		SELECT
			mctg_name
		FROM
			tbl_mCategory
		WHERE
			mctg_uid = #{uid}
	</select>
	
	<select id="sCtgAllNames" resultType="String">
		SELECT
			sctg_name
		FROM
			tbl_sCategory
		WHERE
			sctg_ref = #{uid}
	</select>

	<select id="sctgUID" resultType="String">
		SELECT
			SCTG_UID
		FROM
		    tbl_SCATEGORY
		WHERE
		    SCTG_NAME = #{bl_smCtg}
	</select>

	<select id="mctgUID" resultType="String">
		SELECT
			MCTG_UID
		FROM
		    tbl_MCATEGORY
		WHERE
		    MCTG_NAME = #{bl_smCtg}
	</select>

	<select id="selectName" resultType="hi.im.jenga.board.dto.BoardDTO">
		SELECT
			*
		FROM
			tbl_block
		where
		    BL_WRITER = (SELECT
		                      MEM_IUID
		                 FROM
		                      TBL_MEMINFO
		                 WHERE
		                      MEM_NICK LIKE '%'||#{search}||'%'
		                )
	</select>

	<select id="selectTag" resultType="hi.im.jenga.board.dto.BoardDTO">
		SELECT DISTINCT
			*
		FROM
			tbl_block
		where
		    BL_UID = (SELECT
		    				BT_REF
		    		  FROM
		    		        TBL_BLOCKTAGS
		    		  WHERE
		    		        BT_NAME LIKE '%'||#{search}||'%'
		    )
	</select>

	<select id="selectTitle" resultType="hi.im.jenga.board.dto.BoardDTO">
		SELECT
			*
		FROM
			tbl_block
		where
		    bl_title LIKE '%'||#{search}||'%'
	</select>

	<insert id="setSearchKeyword">
		INSERT INTO
			 tbl_keyword
		values
		     (#{search},#{session_iuid},sysdate)
	</insert>

	<insert id="follow">
		INSERT INTO
			tbl_follow
		VALUES
		 	(#{bl_writer}, #{session_iuid})
	</insert>

	<delete id="unFollow">
		DELETE FROM
			tbl_follow
		WHERE
			FL_IUID = #{bl_writer} and FL_FOLLOWER = #{session_iuid}
	</delete>

	<select id="getFollowerBoard" resultType="hi.im.jenga.board.dto.BoardDTO">
			select
				*
			from
			 	tbl_block
			where
			 	bl_writer = (select
			 		 			fl_iuid
			 		 		 from
			 		 		  	tbl_follow
			 		 		 where
			 		 		 	fl_follower = #{my_iuid})
			 		 		 ORDER by
			 		 		     BL_WRITER
			 		 		 DESC;
	</select>


	<!-- 좋아요 갯수 -->
	<select id="likeCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			tbl_blockLikes
		where
			 blk_ref = #{bl_iuid}
	</select>


	<!-- 내 블록 가져오기-->
	<select id="getMyBlock" resultType="hi.im.jenga.board.dto.BoardDTO">
		SELECT
			*
		FROM
			TBL_BLOCK
		WHERE
			BL_WRITER = #{my_iuid}
	</select>

	<!-- 인기 블록 뽑기 -->
	<select id="getPopBlock" resultType="hi.im.jenga.board.dto.BoardDTO">
		select
		 	 b.BL_TITLE,b.BL_INTRODUCE,b.BL_UID,b.BL_mainctg,b.BL_SMCTG,th.bti_url,b.bl_date,bl.bl_like,rc.BLRC_COUNT,mi.MEM_PROFILE,mi.MEM_NICK
		from
			 tbl_block b
		inner join
		 	 (select
		 	  		BLK_REF, count(*) bl_like
		 	  from
		 	   		tbl_blocklikes
		 	  group by
		 	  		(blk_ref)
		 	  Having
		 	   		count(*) > 1) bl
		 	  on
		 	   		b.BL_UID = bl.blk_REF
		 	  			inner join
		 	   					tbl_THUMBIMG th
		 	 			on
		 	   					b.BL_UID = th.bti_ref
		 	   					 		inner join
		 	   					 		 		tbl_blockreadcount rc
		 	   					 		on
		 	   					 		 		b.BL_UID = rc.BLRC_REF
		 	   					 		 		 		inner join
		 	   					 		 		 		 		tbl_meminfo mi
		 	   					 		 		 		on
		 	   					 		 		 		 		b.BL_WRITER = mi.MEM_IUID
	</select>


	<!-- 내가 좋아요한 board 뽑기 -->
	<select id="">
		select
		 		b.BL_DATE,b.BL_DESCRIPTION,b.BL_INTRODUCE,b.BL_MAINCTG,b.BL_OBJID,b.BL_SMCTG,b.BL_TITLE,b.BL_UID,b.bl_writer
		from
		 		tbl_blocklikes bl
		inner join
		 		tbl_block b
		 		 	on
		 		 	 	bl.BLK_REF = b.bl_uid
		where
		 	bl.blk_writer = #{my_iuid}

	</select>
	
	<!--<select id="getPopReadCountBlock" resultType="hi.im.jenga.board.dto.BoardDTO">
		SELECT
			*
		FROM
			TBL_BLOCK
		WHERE
			BL_UID = (SELECT
							BLRC_REF
					  FROM
					  		TBL_BLOCKREADCOUNT
					  WHERE
					  		10 <![CDATA[ < (SELECT
					  							BLRC_COUNT



					  		]]
							)
	</select>-->
</mapper>














